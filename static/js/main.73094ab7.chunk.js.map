{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","username","name","email","CardList","console","log","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","resp","json","users","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oRAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,SAAxC,2BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCPXC,EAAW,SAACR,GAEvB,OADAS,QAAQC,IAAIV,GAEV,qBAAKC,UAAU,YAAf,SACGD,EAAMI,QAAQO,KAAI,SAACP,GAAD,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQQ,UCNdC,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,8BACE,uBACEd,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCyDHG,G,wDA5Db,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXpB,QAAS,GACTiB,YAAa,IALH,E,gEAWO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEhB,QAASyB,S,+BAOpC,IAAD,EAC0BC,KAAKN,MAA9BpB,EADD,EACCA,QAASiB,EADV,EACUA,YACXU,EAAgB3B,EAAQ4B,QAAO,SAAC5B,GAAD,OACnCA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CACEa,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUX,QAAS2B,W,GAlCTI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IAIAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.73094ab7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.style.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${props.monster.username}set=set3&size=180x180`}\n      ></img>\n      <h1>{props.monster.name}</h1>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.style.css\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  console.log(props);\n  return (\n    <div className=\"card-list\">\n      {props.monster.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.style.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monster: [],\n      searchField: \"\",\n    };\n\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((resp) => resp.json())\n      .then((users) => this.setState({ monster: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monster, searchField } = this.state;\n    const filterMonster = monster.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters</h1>\n        <SearchBox\n          placeholder=\"search monster\"\n          handleChange={this.handleChange}\n        />\n        <CardList monster={filterMonster}></CardList>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}